[device "722"]
vendor = openaps.vendors.medtronic
extra = 722.ini

[device "723"]
vendor = openaps.vendors.medtronic
extra = 723.ini

[device "G4"]
vendor = openaps.vendors.dexcom
extra = G4.ini

[report "monitor/last_four_pump_hours.json"]
device = 722
hours = 4.0
use = iter_pump_hours
reporter = JSON

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "iob"]
vendor = openaps.vendors.process
extra = iob.ini

[report "monitor/glucose.json"]
device = 722
count = 100
use = iter_glucose
reporter = JSON

[report "monitor/temp_basal.json"]
device = 722
use = read_temp_basal
reporter = JSON

[report "settings/bg_targets.json"]
device = 722
use = read_bg_targets
reporter = JSON

[alias]
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json
get-settings = report invoke settings/model.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/settings.json
loop = ! bash -c "openaps monitor-cgm 2>/dev/null && ( openaps preflight && openaps gather && openaps enact) || echo No CGM data."
retry-loop = ! bash -c "until( ! mm-stick warmup || openaps loop); do sleep 5; done"
upload-recent-treatments = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
latest-ns-treatment-time = ! bash -c "nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at"
invoke = report invoke
preflight = ! bash -c "rm -f monitor/clock.json && openaps report invoke monitor/clock.json >/dev/null 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || ( mm-stick warmup || sudo oref0-reset-usb; echo PREFLIGHT FAIL; sleep 120; exit 1 )"
monitor-cgm = report invoke monitor/glucose.json
get-ns-glucose = report invoke monitor/ns-glucose.json

[report "monitor/clock.json"]
device = 722
use = read_clock
reporter = JSON

[report "monitor/temp_basil.json"]
device = 722
use = read_temp_basal
reporter = JSON

[report "monitor/pumphistory.json"]
device = 722
use = read_history_data
page = 1
reporter = JSON

[device "latest-treatments"]
vendor = openaps.vendors.process
extra = latest-treatments.ini

[report "upload/latest-treatments.json"]
device = format-latest-nightscout-treatments
use = shell
json_default = True
reporter = JSON
remainder = []

[device "pump"]
vendor = openaps.vendors.medtronic
extra = pump.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "ns-glucose"]
vendor = openaps.vendors.process
extra = ns-glucose.ini

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/ns-glucose.json"]
device = ns-glucose
remainder = []
use = shell
json_default = True
reporter = text

[report "settings/model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = tzfile('/etc/localtime')

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = ['timestamp', 'dateString', 'start_at', 'end_at', 'created_at']
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = tzfile('/etc/localtime')

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = text
clock = monitor/clock-zoned.json
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = iob
remainder = []

[report "settings/insulin_sensitivities.json"]
device = pump
use = read_insulin_sensitivies
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

