[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "pump"]
vendor = openaps.vendors.medtronic
extra = pump.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "ns-glucose"]
vendor = openaps.vendors.process
extra = ns-glucose.ini

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "iob"]
vendor = openaps.vendors.process
extra = iob.ini

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/glucose.json"]
device = cgm
count = 5
use = iter_glucose
reporter = JSON

[report "monitor/ns-glucose.json"]
device = ns-glucose
remainder = []
use = shell
json_default = True
reporter = text

[report "settings/model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = GMT-8

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = GMT-8

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = text
clock = monitor/clock-zoned.json
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = iob
remainder = []

[report "settings/bg_targets.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = pump
use = read_insulin_sensitivities
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[alias]
invoke = report invoke
preflight = ! bash -c "rm -f monitor/clock.json && openaps report invoke monitor/clock.json >/dev/null 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || ( mm-stick warmup || sudo oref0-reset-usb; echo PREFLIGHT FAIL; sleep 120; exit 1 )"
monitor-cgm = report invoke monitor/glucose.json
get-ns-glucose = report invoke monitor/ns-glucose.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json
get-settings = report invoke settings/model.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/settings.json
get-bg = ! bash -c "openaps monitor-cgm 2>/dev/null || ( openaps get-ns-glucose && grep -q glucose monitor/ns-glucose.json && mv monitor/ns-glucose.json monitor/glucose.json )"
gather = ! bash -c "rm monitor/*; ( openaps get-bg && openaps get-settings >/dev/null && openaps monitor-pump ) 2>/dev/null"
wait-for-bg = ! bash -c "cp monitor/glucose.json monitor/last-glucose.json; while(diff -q monitor/last-glucose.json monitor/glucose.json); do echo -n .; sleep 10; openaps get-bg >/dev/null; done"
latest-ns-treatment-time = ! bash -c "nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at"
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
upload-recent-treatments = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""
upload = ! bash -c "openaps preflight && ( openaps monitor-pump && openaps upload-recent-treatments && openaps get-settings) 2>/dev/null >/dev/null && echo -n \"Uploaded; most recent treatment event @ \" && openaps latest-ns-treatment-time || echo \"Error; could not upload\""

